// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/admin/movies": {
            "get": {
                "description": "Semua data Movie untuk admin",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin-Movies"
                ],
                "summary": "Get All Movies (Admin)",
                "responses": {}
            }
        },
        "/admin/movies/{id}": {
            "put": {
                "description": "Update data movie berdasarkan ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin-Movies"
                ],
                "summary": "Update Movie (Admin)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Movie ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Movie Update Data",
                        "name": "movie",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateMovieRequest"
                        }
                    }
                ],
                "responses": {}
            },
            "delete": {
                "description": "Hapus movie berdasarkan ID",
                "tags": [
                    "Admin-Movies"
                ],
                "summary": "Delete Movie (Admin)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Movie ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/auth/login": {
            "post": {
                "description": "Login dengan email dan password, JWT disini",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Login User",
                "parameters": [
                    {
                        "description": "Login Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.LoginRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/auth/register": {
            "post": {
                "description": "Daftar User baru beserta profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Register User",
                "parameters": [
                    {
                        "description": "Register Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RegisterRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/movies": {
            "get": {
                "description": "Movie lists pagination (default limit: 10, offset: 0)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Movies"
                ],
                "summary": "Get Movies with Pagination",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Jumlah data per halaman (Default: 10)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset data (Default: 0)",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {}
            }
        },
        "/movies/popular": {
            "get": {
                "description": "Popular Movies",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Movies"
                ],
                "summary": "Get Popular Movies",
                "responses": {}
            }
        },
        "/movies/schedules/{schedule_id}/seats": {
            "get": {
                "description": "kursi kosong berdasarkan schedule ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Movies"
                ],
                "summary": "Get Available Seats",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Schedule ID",
                        "name": "schedule_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/movies/upcoming": {
            "get": {
                "description": "Upcoming Movies",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Movies"
                ],
                "summary": "Get Upcoming Movies",
                "responses": {}
            }
        },
        "/movies/{id}": {
            "get": {
                "description": "Detail lengkap movie berdasarkan ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Movies"
                ],
                "summary": "Get Movie Detail",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Movie ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/movies/{id}/schedules": {
            "get": {
                "description": "Get Schedule by Movie ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Movies"
                ],
                "summary": "Get Schedule by Movie ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Movie ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/orders": {
            "post": {
                "description": "Buat pesanan baru",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Create a new Order",
                "parameters": [
                    {
                        "description": "Order Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateOrderRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/orders/user/{user_id}": {
            "get": {
                "description": "Semua order milik user berdasarkan User ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Get Order History by User",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/orders/{id}": {
            "get": {
                "description": "Detail pesanan berdasarkan Order ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Get Order Detail",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/profile": {
            "get": {
                "description": "Data profil user login",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Get User Profile",
                "responses": {}
            },
            "put": {
                "description": "Update data profil user yang sedang login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Update User Profile",
                "parameters": [
                    {
                        "description": "Profile data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Profile"
                        }
                    }
                ],
                "responses": {}
            }
        }
    },
    "definitions": {
        "models.CreateOrderRequest": {
            "type": "object",
            "properties": {
                "order": {
                    "$ref": "#/definitions/models.Order"
                },
                "seat_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "models.LoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user@mail.com"
                },
                "password": {
                    "type": "string",
                    "example": "123456"
                }
            }
        },
        "models.Order": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string",
                    "example": "johndoe@mail.com"
                },
                "fullname": {
                    "type": "string",
                    "example": "John Doe"
                },
                "id": {
                    "type": "integer"
                },
                "payment_id": {
                    "type": "integer",
                    "example": 2
                },
                "phone": {
                    "type": "string",
                    "example": "08123456789"
                },
                "qr_code": {
                    "type": "string"
                },
                "schedule_id": {
                    "type": "integer",
                    "example": 10
                },
                "seats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Seat"
                    }
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "models.Profile": {
            "type": "object",
            "properties": {
                "firstname": {
                    "type": "string",
                    "example": "Farid"
                },
                "lastname": {
                    "type": "string",
                    "example": "Darari"
                },
                "phone_number": {
                    "type": "string",
                    "example": "089876543210"
                },
                "user_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "models.RegisterRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "newuser@mail.com"
                },
                "firstname": {
                    "type": "string",
                    "example": "John"
                },
                "lastname": {
                    "type": "string",
                    "example": "Doe"
                },
                "password": {
                    "type": "string",
                    "example": "mypassword"
                },
                "phone_number": {
                    "type": "string",
                    "example": "08123456789"
                },
                "role": {
                    "type": "string",
                    "example": "user"
                }
            }
        },
        "models.Seat": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "seat_code": {
                    "type": "string"
                }
            }
        },
        "models.UpdateMovieRequest": {
            "type": "object",
            "required": [
                "backdrop",
                "director",
                "duration",
                "overview",
                "popularity",
                "poster",
                "release_date",
                "title"
            ],
            "properties": {
                "backdrop": {
                    "type": "string",
                    "example": "https://image.tmdb.org/t/p/w500/backdrop.jpg"
                },
                "director": {
                    "type": "string",
                    "example": "Anthony Russo, Joe Russo"
                },
                "duration": {
                    "type": "integer",
                    "example": 180
                },
                "overview": {
                    "type": "string",
                    "example": "After the devastating events of Infinity War..."
                },
                "popularity": {
                    "type": "number",
                    "example": 95.6
                },
                "poster": {
                    "type": "string",
                    "example": "https://image.tmdb.org/t/p/w500/poster.jpg"
                },
                "release_date": {
                    "type": "string",
                    "example": "2019-04-26T00:00:00Z"
                },
                "title": {
                    "type": "string",
                    "example": "Avengers: Endgame"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Backend Golang Tickitz App",
	Description:      "RESTful API created using gin for BE GO Tickitz App",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
