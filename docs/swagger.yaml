definitions:
  models.CreateOrderExample:
    properties:
      order:
        properties:
          email:
            example: farid@mail.com
            type: string
          fullname:
            example: Farid RD
            type: string
          payment_id:
            example: 1
            type: integer
          phone:
            example: "08123456789"
            type: string
          schedule_id:
            example: 1
            type: integer
          user_id:
            example: 1
            type: integer
        type: object
      seat_ids:
        example:
        - 1
        items:
          type: integer
        type: array
    type: object
  models.LoginRequest:
    properties:
      email:
        example: user1@gmail.com
        type: string
      password:
        example: password123
        type: string
    required:
    - email
    - password
    type: object
  models.Profile:
    properties:
      firstname:
        example: Farid
        type: string
      lastname:
        example: Darari
        type: string
      phone_number:
        example: "089876543210"
        type: string
      user_id:
        type: integer
    type: object
  models.RegisterRequest:
    properties:
      email:
        example: newuser@mail.com
        type: string
      firstname:
        example: Farid
        type: string
      lastname:
        example: Rhamadhan
        type: string
      password:
        example: mypassword
        type: string
      phone_number:
        example: "08123456789"
        type: string
      role:
        example: user
        type: string
    required:
    - email
    - password
    type: object
  models.UpdateMovieRequest:
    properties:
      backdrop:
        example: https://image.tmdb.org/t/p/w500/backdrop.jpg
        type: string
      director:
        example: Anthony Russo, Joe Russo
        type: string
      duration:
        example: 180
        type: integer
      overview:
        example: After the devastating events of Infinity War...
        type: string
      popularity:
        example: 95.6
        type: number
      poster:
        example: https://image.tmdb.org/t/p/w500/poster.jpg
        type: string
      release_date:
        example: "2019-04-26T00:00:00Z"
        type: string
      title:
        example: 'Avengers: Endgame'
        type: string
    required:
    - backdrop
    - director
    - duration
    - overview
    - popularity
    - poster
    - release_date
    - title
    type: object
info:
  contact: {}
  title: Backend Golang Tickitz App
  version: "1.0"
paths:
  /admin/movies:
    get:
      description: Semua data Movie untuk admin
      produces:
      - application/json
      responses: {}
      security:
      - BearerToken: []
      summary: Get All Movies (Admin)
      tags:
      - Admin-Movies
  /admin/movies/{id}:
    delete:
      description: Hapus movie berdasarkan ID
      parameters:
      - description: Movie ID
        in: path
        name: id
        required: true
        type: integer
      responses: {}
      security:
      - BearerToken: []
      summary: Delete Movie (Admin)
      tags:
      - Admin-Movies
    put:
      consumes:
      - application/json
      description: Update data movie berdasarkan ID
      parameters:
      - description: Movie ID
        in: path
        name: id
        required: true
        type: integer
      - description: Movie Update Data
        in: body
        name: movie
        required: true
        schema:
          $ref: '#/definitions/models.UpdateMovieRequest'
      produces:
      - application/json
      responses: {}
      security:
      - BearerToken: []
      summary: Update Movie (Admin)
      tags:
      - Admin-Movies
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login dengan email dan password, JWT disini
      parameters:
      - description: Login Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      produces:
      - application/json
      responses: {}
      summary: Login User
      tags:
      - Auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Daftar User baru beserta profile
      parameters:
      - description: Register Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.RegisterRequest'
      produces:
      - application/json
      responses: {}
      summary: Register User
      tags:
      - Auth
  /movies:
    get:
      description: Ambil daftar film dengan pagination dan pencarian berdasarkan judul
      parameters:
      - description: 'Halaman (Default: 1)'
        in: query
        name: page
        type: integer
      - description: 'Jumlah data per halaman (Default: 10)'
        in: query
        name: pagesize
        type: integer
      - description: Cari berdasarkan judul film
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses: {}
      summary: Get Movies with Pagination and Search
      tags:
      - Movies
  /movies/{id}:
    get:
      description: Detail lengkap movie berdasarkan ID
      parameters:
      - description: Movie ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      summary: Get Movie Detail
      tags:
      - Movies
  /movies/{id}/schedules:
    get:
      description: Get Schedule by Movie ID
      parameters:
      - description: Movie ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      summary: Get Schedule by Movie ID
      tags:
      - Movies
  /movies/popular:
    get:
      description: Popular Movies
      produces:
      - application/json
      responses: {}
      summary: Get Popular Movies
      tags:
      - Movies
  /movies/schedules/{schedule_id}/seats:
    get:
      description: kursi kosong berdasarkan schedule ID
      parameters:
      - description: Schedule ID
        in: path
        name: schedule_id
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      summary: Get Available Seats
      tags:
      - Movies
  /movies/upcoming:
    get:
      description: Upcoming Movies
      produces:
      - application/json
      responses: {}
      summary: Get Upcoming Movies
      tags:
      - Movies
  /orders:
    post:
      consumes:
      - application/json
      description: Buat pesanan baru
      parameters:
      - description: Order Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.CreateOrderExample'
      produces:
      - application/json
      responses: {}
      security:
      - BearerToken: []
      summary: Create a new Order
      tags:
      - Orders
  /orders/{id}:
    get:
      description: Detail pesanan berdasarkan Order ID
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      security:
      - BearerToken: []
      summary: Get Order Detail
      tags:
      - Orders
  /orders/user/{user_id}:
    get:
      description: Semua order milik user berdasarkan User ID
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      security:
      - BearerToken: []
      summary: Get Order History by User
      tags:
      - Orders
  /profile:
    get:
      description: Data profil user login
      produces:
      - application/json
      responses: {}
      security:
      - BearerToken: []
      summary: Get User Profile
      tags:
      - Profile
    put:
      consumes:
      - application/json
      description: Update data profil user yang sedang login
      parameters:
      - description: Profile data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Profile'
      produces:
      - application/json
      responses: {}
      security:
      - BearerToken: []
      summary: Update User Profile
      tags:
      - Profile
securityDefinitions:
  BearerToken:
    description: RESTful API created using gin for BE GO Tickitz App
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
